<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd ">


    <!--spring排除Controller注解，给springMvc来定义Controller-->
    <context:component-scan base-package="com.oufuhua.**">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <!--引入属性文件-->
    <context:property-placeholder location="classpath:properties/**.properties"/>

    <!-- 2、配置连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="checkoutTimeout" value="${c3p0.checkoutTimeout}"/>
        <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>
    </bean>


    <!--DAO的接口-->
    <!-- 配置SqlSessionFactory(mybatis工厂)对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描model包 使用别名 -->

        <property name="typeAliasesPackage" value="com.oufuhua.model;com.oufuhua.vo"/>

        <!-- 扫描sql配置文件:mapper需要的xml文件 DAO文件名和mapper文件名相同会自动映射-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>

        <!--配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>

    </bean>

    <!-- 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="com.oufuhua.dao"/>
    </bean>


    <!--Aop事务-->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--事务模板对象-->
    <bean name="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>


    <!--用注解开启事务-->
    <!--<tx:annotation-driven/>-->

    <!--isolation事务隔离级别 propagation事务传播属性,查找一般都是只读-->
    <!--https://blog.csdn.net/u010689306/article/details/51505488-->
    <!--配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" isolation="READ_COMMITTED" propagation="REQUIRED" read-only="false"/>
            <tx:method name="update*" isolation="READ_COMMITTED" propagation="REQUIRED" read-only="false"/>
            <tx:method name="add*" isolation="READ_COMMITTED" propagation="REQUIRED" read-only="false"/>
            <tx:method name="delete*" isolation="READ_COMMITTED" propagation="REQUIRED" read-only="false"/>
            <tx:method name="modify*" isolation="READ_COMMITTED" propagation="REQUIRED" read-only="false"/>
            <tx:method name="remove*" isolation="READ_COMMITTED" propagation="REQUIRED" read-only="false"/>
            <tx:method name="transfer*" isolation="READ_COMMITTED" propagation="REQUIRED" read-only="false"/>
            <tx:method name="get*" isolation="READ_COMMITTED" propagation="REQUIRED" read-only="true"/>
            <tx:method name="find*" isolation="READ_COMMITTED" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--配置织入-->
    <aop:config>
        <!-- 配置切点表达式 -->
        <aop:pointcut expression="execution(* com.oufuhua.service.impl..*.*(..))" id="txPc"/>
        <!-- 配置切面 : 通知+切点 advice-ref:通知的名称 pointcut-ref:切点的名称 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPc"/>
    </aop:config>


</beans>